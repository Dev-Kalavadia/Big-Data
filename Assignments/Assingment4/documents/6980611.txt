Title: Novell Embedded Systems Technology



Novell Embedded Systems Technology (NEST) was a series of APIs, data formats and network protocol stacks written in a highly portable fashion intended to be used in embedded systems. The idea was to allow various small devices to access Novell NetWare services, provide such services, or use NetWare's IPX protocol as a communications system (and later also TCP/IP). Novell referred to this concept as "Extended Networks", and when the effort was launched they boasted that they wanted to see one billion devices connected to NetWare networks by year 2000. NEST was launched in mid-1994 countering Microsoft's similar Microsoft at Work efforts, which had been launched in 1993.

Neither technology saw much third-party support, although some of NEST's code was apparently re-used in Novell Distributed Print Services (NDPS), and thus iPrint.

==Architecture==
NEST consisted primarily of a Novell protocol driver stack implemented in ANSI C. The stack included drivers for then-popular networking hardware, including Ethernet, Token Ring, AppleTalk (actually referring to LocalTalk, a common confusion) and ISDN, as well as higher-level modules for protocols such as Novell's own IPX, and AppleTalk, and later TCP/IP.

The NetWare Services Layer added support for application protocols, notably NetWare client services such as file servers and network time synchronization, and the NEST Requester which acted as a pipe-like endpoint for lightweight communications.

Orthogonal to these services, NEST also included basic implementations of Novell's PSERVER and NPRINTER servers.

Finally, NEST also defined an operating system interface known as POSE (Portable Operating System Extension), which was a thin translation module defining all of the calls NEST needed to support its own functionality, things like memory management and process creation (as POSIX 1003.1, 1003.4, and 1003.4A subsets), which the developer ported to the particular platform of interest. NEST was deliberately written to be able to run from ROM without secondary storage (i.e., it had no long-term state it needed to store).

Whereas the Digital Research-inherited modular real-time multi-user multi-tasking operating system FlexOS was used by Novell as a primary test platform during development, NEST did not include an operating system of its own, and instead was intended to be used on existing platforms and OSs.
One such third-party OS to support NEST in 1995 was pSOS+ by Integrated Systems (ISI) a company who had bought FlexOS from Novell for US$3,000,000 in July 1994. The deal comprised a direct payment of half this sum as well as shares representing 2% of the company.

The NEST code was deliberately modular, in order to allow developers to use as much or as little of the overall package as they needed. It was expected that developers would pick and choose the components they needed, for instance, a device reporting status over the network might choose only the NEST Requester, IPX and an Ethernet driver, removing the rest from their assembly. In contrast, Microsoft at Work could be used in a similar fashion, but it seemed that it was generally expected that end users would use the complete system as the basis of their devices in a fashion similar to the later Windows CE.

==Impact==
Like at Work, however, NEST appears to have seen little real-world use. After the initial release in 1994, there appears to be little news on NEST, followed by another flurry in early 1996 when TCP/IP support was added, at which point Novell claimed there were over 80 companies using NEST, including major office machinery firms like Canon, Hewlett-Packard, Ricoh, and Xerox. However, NEST then went the way of at Work, and was abandoned within Novell in January 1997.

==See also==
* Utilicorp United (power-line communication)
* FlexOS
* pSOSystem
* DR-WebSpyder
* Internet of Things (IoT)
* Runtime system

