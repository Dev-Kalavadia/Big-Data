Title: .NET Micro Framework

The .NET Micro Framework (NETMF) is a .NET Framework platform for resource-constrained devices with at least 512 kB of flash and 256 kB of random-access memory (RAM). It includes a small version of the .NET Common Language Runtime (CLR) and supports development in C#, Visual Basic .NET, and debugging (in an emulator or on hardware) using Microsoft Visual Studio. NETMF features a subset of the .NET base class libraries (about 70 classes with about 420 methods), an implementation of Windows Communication Foundation (WCF), a GUI framework loosely based on Windows Presentation Foundation (WPF), and a Web Services stack based on Simple Object Access Protocol (SOAP) and Web Services Description Language (WSDL). NETMF also features added libraries specific to embedded applications. It is free and open-source software released under Apache License 2.0.

The Micro Framework aims to make embedded development easier, faster, and less costly by giving embedded developers access to the modern technologies and tools used by desktop application developers. Also, it allows desktop .NET developers to use their skills in embedded systems, enlarging the pool of qualified embedded developers.

The Micro Framework is part of the .NET Foundation. Announced at the Build 2014 conference, the foundation was created as an independent forum to foster open development and collaboration around the growing set of open-source technologies for .NET..NET Foundation

==Features==
Relative to other .NET platforms, the unique features of the Micro Framework are:

* Memory needs of about 300 kB; in contrast, the next smallest .NET implementation, the .NET Compact Framework running on Windows CE, needs about 12 MB
* Can run directly on a bare machine with no operating system, or can run on an operating system (OS)
* Supports common embedded peripherals and interconnects, including flash memory, EEPROM, GPIO, I2C, Serial Peripheral Interface Bus (SPI), serial port, USB
* Optimized for energy-efficiency in battery-powered devices
* Needs no memory management unit
* Provides multithreading support even when running on single-threaded operating systems
* A hardware abstraction layer allows porting to other architectures
* A managed device driver model allows drivers for many devices to be written in C#
* Execution constraints to catch device lockups and crashes
* Transparent support for storing objects in non-volatile memory

Due to the constraints under which it operates, the Micro Framework does have some limits beyond those imposed by its slimmed-down libraries. For example, the platform does not support symmetric multiprocessing, multidimensional arrays, machine-dependent types, or unsafe instructions. The CLR is an interpreter rather than a just-in-time compiler, and uses a simpler mark-and-sweep garbage collector instead of a generational method. An ahead-of-time compiler is being developed using a modified LLVM compiler. Interoperation between managed and native code currently has several limitations. As of 2011, Micro Framework supported two .NET languages: C# and Visual Basic..NET Micro Framework only supports C# and Visual Basic

==Support==
As of 2013, the .NET Micro Framework was supported on ARM architecture processors (including ARM7, ARM9, and Cortex-M) and has been supported on Analog Devices Blackfin in the past. The Porting Kit is now available along with the source code as a free download under the Apache License 2.0 at the Microsoft Download Center.

The Micro Framework has its roots in Microsoft's Smart Personal Objects Technology (SPOT) initiative and was used in MSN Direct products such as smart watches before being made available to third-party developers early in 2007. It is a common platform for Windows SideShow devices and has been adopted in other markets, such as energy management, healthcare, industrial automation, and sensor networks.

Microsoft allows developers to create applications using the Micro Framework without charge, and makes a software development kit (SDK) available for free download that can be used with all versions of Visual Studio, including the free Express editions.

==History==
In November 2009, Microsoft released the source code of the Micro Framework to the development community as free and open-source software under the Apache License 2.0.

In January 2010, Microsoft launched the netmf.com community development site to coordinate ongoing development of the core implementation with the open-source community.

On 9 January 2010, GHI Electronics announced FEZ Domino, the first member of the product line called FEZ (Freakin' Easy!), a combination of open-source hardware with a proprietary closed-source version of .NET Micro Framework.
FEZ: open-source electronics boards with many open-source component drivers using .NET MF

On 3 August 2010, Secret Labs announced the Netduino, the first all-open-source electronics platform using the .NET Micro Framework.Netduino: open-source electronics platform using .NET MF

In February 2011, Novell posted a preview of the Mono 2.12 C# compiler, the first open-source compiler for .NET Micro Framework.Experimental Mono support for Mac/Linux

On 23 January 2017, after numerous attempts ( and ) to revive .NET Microframework project and bring it to community governance and a period of work "in the dark", a group of embedded systems developers publicly announced .NET nanoFramework as spin-off of .NET Micro Framework. A major rework on the build system, an easier way of adding new targets, a modernized API following UWP, a Visual Studio extension with all the tools required for managing targets, full development experience from coding to debugging on the native code and support for ARM Cortex-M and ESP32 were the key differences at that time. On 12 October 2018 the first official release of the class libraries and firmware images was announced.

On 16 December 2016, GHI Electronics announced their own implementation of Micro Framework called TinyCLR OS, citing lack of maintenance of NETMF by Microsoft.  On 7 July 2017 GHI announced 5th preview of TinyCLR OS.  On 2 February 2018 GHI announced 8th preview of TinyCLR OS.  On 5 April 2018 GHI announced 10th preview of TinyCLR OS.TinyCLR OS Tenth Release: Bugs, RTC, and STM32F7

==Hardware==
Multiple vendors make chips, development kits, and more that run the Micro Framework.

===Netduino by Wilderness Labs===
Netduino is an open-source electronics platform using the Micro Framework. Originally created by Secret Labs, but now manufactured and maintained by Wilderness Labs Inc. Based on 168Mhz Cortex-M4 (STM32F4) with up to 1,408 KB of code storage and 164 KB of RAM. On-board USB, Ethernet, Wifi, SD card slot. Development environment is MS Visual Studio and C#. Pin compatible with Arduino shields although drivers are required for some shields.

===GHI Electronics===
GHI Electronics makes several modules that support the Micro Framework:

* EMX Module
* ChipworkX Module
* USBizi144 Chipset and USBizi100, whose only difference is the lack of USB host support in the USBizi100

GHI Electronics also makes the .NET FEZ line of very small open-source hardware boards with proprietary firmware, targeted for beginners. They are based on the USBizi chipset and all its features. The FEZ Domino board offers USB host. Even though FEZ is for beginners, it's also a low-cost starting point for professionals wanting to explore NETMF. Some of these boards are physically compatible with the Arduino.

===Mountaineer boards===
Mountaineer boards, part of the Mountaineer Group, make a small range of open-source open-hardware boards that make use of the Micro Framework.  Mountaineer have ported the Micro Framework for use on the STM32 family of microcontrollers featured on their Mountaineer boards and elsewhere.

===STMicroelectronics===
STMicroelectronics, creators of the microcontroller family STM32, make low-cost discovery boards to showcase the controllers, and provides ports of the Micro Framework to run on them.UM1676: Getting started with .Net Micro Framework on the STM32F429 Discovery kit

===Netmfdevices===
Netmfdevices is an open-source electronics platform using FEZHacker and .NET Micro Framework.Netmfdevices

===Micromint===
The Micromint Bambino 200 is the first multi-core processor SBC compatible with the .NET Gadgeteer framework.Micromint Bambino 200  The model 200 is powered by an NXP LPC4330, the first dual-core ARM Cortex-M microcontroller. Its Cortex-M4 and Cortex-M0 cores are both capable of 204 MHz. It has 264 KB SRAM onboard and 4 MB of flash. The model 200E has all the same features as the model 200, and increased flash memory to 8 MB, 10 Gadgeteer sockets, an Ethernet port, microSD socket, and other features.

===.NET Gadgeteer devices===
Several manufacturers make boards and modules compatible with the .NET Gadgeteer rapid-prototyping standard for the framework.

==See also==

* DirectBand
* .NET Compact Framework
* .NET Framework

